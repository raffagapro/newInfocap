{"version":3,"sources":["webpack:///src/app/login/register/register.page.html","webpack:///src/app/login/register/register.page.ts","webpack:///src/app/login/register/register.module.ts","webpack:///src/app/login/register/register.page.scss","webpack:///src/app/login/register/register-routing.module.ts"],"names":["RegisterPage","modalController","http","lc","router","errors","name","last_name","email","password","phone1","form","valid","value","wName","split","l_name","undefined","confirm_password","create","message","loader","present","body","a","post","headers","response","data","success","dismiss","clearErrors","reset","component","cssClass","successModal","length","navigate","selector","template","RegisterPageModule","imports","declarations","routes","path","RegisterPageRoutingModule","forChild","exports"],"mappings":"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","file":"login-register-register-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar mode=\\\"ios\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/\\\" text=\\\"\\\" icon=\\\"arrow-back\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title class=\\\"ion-text-uppercase main-color title-toolbar\\\">Registrarse</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding\\\">\\n  <div style=\\\"height: 5%\\\"></div>\\n  <ion-grid>\\n\\n    <!-- title -->\\n    <ion-row>\\n      <ion-col size=\\\"1\\\" offset=\\\"1\\\"></ion-col>\\n      <ion-col size=\\\"8\\\" class=\\\"ion-text-center\\\">\\n        <ion-text class=\\\"main-color ion-text-uppercase title\\\">INGRESA TUS DATOS PERSONALES</ion-text>\\n      </ion-col>\\n      <ion-col size=\\\"1\\\"></ion-col>\\n\\n      <ion-col size=\\\"1\\\" offset=\\\"1\\\"></ion-col>\\n      <ion-col size=\\\"8\\\" class=\\\"ion-text-center\\\">\\n        <ion-text>\\n          <hr>\\n        </ion-text>\\n      </ion-col>\\n      <ion-col size=\\\"1\\\"></ion-col>\\n    </ion-row>\\n\\n    <!-- Register Inputs -->\\n    <form #f=\\\"ngForm\\\" (ngSubmit)=\\\"onRegister(f)\\\">\\n      <!-- nombre -->\\n      <ion-row>\\n        <ion-col size=\\\"11\\\">\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\" class=\\\"main-color\\\">\\n              <ion-icon name=\\\"person\\\" slot=\\\"start\\\" class=\\\"main-color\\\"></ion-icon>\\n              <ion-text class=\\\"main-color\\\">&nbsp;&nbsp;&nbsp;Nombre\\n              </ion-text>\\n            </ion-label>\\n            <ion-input ngModel name=\\\"name\\\" required #nameCtrl=\\\"ngModel\\\" type=\\\"text\\\">\\n            </ion-input>\\n          </ion-item>\\n          <!-- error  -->\\n          <ion-label *ngIf=\\\"!nameCtrl.valid && nameCtrl.touched\\\" class=\\\"errorMess text-center\\\">\\n            <ion-icon name=\\\"alert-circle-outline\\\" class=\\\"iconFixG\\\" color=\\\"danger\\\"></ion-icon>\\n            <ion-text color=\\\"danger\\\">\\n              <small> El nombre es requerido</small>\\n            </ion-text>\\n          </ion-label>\\n          <!--  httpo name error  -->\\n          <ion-label *ngIf=\\\"errors.name[0] !== undefined\\\" class=\\\"errorMess text-center\\\">\\n            <ion-icon name=\\\"alert-circle-outline\\\" class=\\\"iconFixG\\\" color=\\\"danger\\\"></ion-icon>\\n            <ion-text color=\\\"danger\\\">\\n              <small> {{ errors.name[0] }}</small>\\n            </ion-text><br>\\n          </ion-label>\\n          <!-- http last name error  -->\\n          <ion-label *ngIf=\\\"errors.last_name[0] !== undefined\\\" class=\\\"errorMess text-center\\\">\\n            <ion-icon name=\\\"alert-circle-outline\\\" class=\\\"iconFixG\\\" color=\\\"danger\\\"></ion-icon>\\n            <ion-text color=\\\"danger\\\">\\n              <small> {{ errors.last_name[0] }}</small>\\n            </ion-text><br>\\n          </ion-label>\\n\\n        </ion-col>\\n      </ion-row>\\n\\n      <!-- email -->\\n      <ion-row>\\n        <ion-col size=\\\"11\\\">\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\">\\n              <ion-icon src=\\\"/assets/icon/ic_mail.svg\\\" slot=\\\"start\\\" class=\\\"main-color\\\"></ion-icon>\\n              <ion-text class=\\\"main-color\\\">&nbsp;&nbsp;&nbsp;Email\\n              </ion-text>\\n            </ion-label>\\n            <ion-input ngModel name=\\\"email\\\" required email #emailCtrl=\\\"ngModel\\\" type=\\\"email\\\">\\n            </ion-input>\\n          </ion-item>\\n          <!-- error  -->\\n          <ion-label *ngIf=\\\"!emailCtrl.valid && emailCtrl.touched\\\" class=\\\"errorMess\\\">\\n            <ion-icon name=\\\"alert-circle-outline\\\" class=\\\"iconFixG\\\" color=\\\"danger\\\"></ion-icon>\\n            <ion-text color=\\\"danger\\\">\\n              <small> El email es requerido</small>\\n            </ion-text>\\n          </ion-label>\\n          <!-- http email error  -->\\n          <ion-label *ngIf=\\\"errors.email[0] !== undefined\\\" class=\\\"errorMess\\\">\\n            <ion-icon name=\\\"alert-circle-outline\\\" class=\\\"iconFixG\\\" color=\\\"danger\\\"></ion-icon>\\n            <ion-text color=\\\"danger\\\">\\n              <small class=\\\"error-text\\\"> {{ errors.email[0] }}</small>\\n            </ion-text><br>\\n          </ion-label>\\n\\n\\n        </ion-col>\\n      </ion-row>\\n\\n      <!-- phone -->\\n      <ion-row>\\n        <ion-col size=\\\"11\\\">\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\" class=\\\"main-color\\\">\\n              <ion-icon src=\\\"/assets/icon/ic_phone.svg\\\" slot=\\\"start\\\" class=\\\"main-color\\\"></ion-icon>\\n              <ion-text class=\\\"main-color\\\">&nbsp;&nbsp;&nbsp;Teléfono</ion-text>\\n            </ion-label>\\n            <ion-input ngModel name=\\\"phone1\\\" required #phone1Ctrl=\\\"ngModel\\\" type=\\\"tel\\\">\\n            </ion-input>\\n          </ion-item>\\n          <!-- error  -->\\n          <ion-label *ngIf=\\\"!phone1Ctrl.valid && phone1Ctrl.touched\\\" class=\\\"errorMess\\\">\\n            <ion-icon name=\\\"alert-circle-outline\\\" class=\\\"iconFixG\\\" color=\\\"danger\\\"></ion-icon>\\n            <ion-text color=\\\"danger\\\">\\n              <small> El teléfono es requerido</small>\\n            </ion-text>\\n          </ion-label>\\n        </ion-col>\\n      </ion-row>\\n\\n      <!-- password -->\\n      <ion-row>\\n        <ion-col size=\\\"11\\\">\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\" class=\\\"main-color\\\">\\n              <ion-icon src=\\\"/assets/icon/ic_lock.svg\\\" class=\\\"main-color\\\"></ion-icon>\\n              <ion-text class=\\\"main-color\\\">&nbsp;&nbsp;&nbsp;Contraseña</ion-text>\\n            </ion-label>\\n            <ion-input ngModel name=\\\"password\\\" minlength=\\\"8\\\" required #passwordCtrl=\\\"ngModel\\\" type=\\\"password\\\">\\n            </ion-input>\\n          </ion-item>\\n          <!-- error  -->\\n          <ion-label *ngIf=\\\"!passwordCtrl.valid && passwordCtrl.touched\\\" class=\\\"errorMess\\\">\\n            <ion-icon name=\\\"alert-circle-outline\\\" class=\\\"iconFixG\\\" color=\\\"danger\\\"></ion-icon>\\n            <ion-text color=\\\"danger\\\">\\n              <small> El password es requerido</small>\\n            </ion-text>\\n          </ion-label>\\n          <!-- http password error  -->\\n          <ion-label *ngIf=\\\"errors.password[0] !== undefined\\\" class=\\\"errorMess\\\">\\n            <ion-icon name=\\\"alert-circle-outline\\\" class=\\\"iconFixG\\\" color=\\\"danger\\\"></ion-icon>\\n            <ion-text color=\\\"danger\\\">\\n              <small> {{ errors.password[0] }}</small>\\n            </ion-text>\\n          </ion-label>\\n\\n        </ion-col>\\n      </ion-row>\\n\\n      <!-- password confirm -->\\n      <ion-row>\\n        <ion-col size=\\\"11\\\">\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\" class=\\\"main-color\\\">\\n              <ion-icon src=\\\"/assets/icon/ic_lock.svg\\\" class=\\\"main-color\\\"></ion-icon>\\n              <ion-text class=\\\"main-color\\\">&nbsp;&nbsp;&nbsp;Repetir contraseña</ion-text>\\n            </ion-label>\\n            <ion-input ngModel name=\\\"confirm_password\\\" minlength=\\\"8\\\" required type=\\\"password\\\">\\n            </ion-input>\\n          </ion-item>\\n        </ion-col>\\n      </ion-row>\\n\\n      <!-- Registrar BTN -->\\n      <ion-row class=\\\"ion-margin-top\\\">\\n        <ion-col class=\\\"ion-margin-top\\\">\\n          <ion-button expand=\\\"block\\\" type=\\\"submit\\\" [disabled]=\\\"!f.valid\\\" class=\\\"ion-text-uppercase\\\">\\n            Registrarme\\n          </ion-button>\\n        </ion-col>\\n        <ion-col size=\\\"12\\\">\\n          <ion-text class=\\\"privacy-text\\\">\\n            <p>\\n              Al continuar e iniciar sesión usted acepta nuestra <span (click)=\\\"goToPrivacy()\\\">Política de\\n                privacidad</span> y los\\n              <span (click)=\\\"goToTerms()\\\">Términos\\n                y condiciones</span>\\n            </p>\\n          </ion-text>\\n        </ion-col>\\n      </ion-row>\\n\\n    </form>\\n  </ion-grid>\\n</ion-content>\";","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { LoadingController, ModalController } from '@ionic/angular';\nimport { API } from 'src/environments/environment';\nimport { SuccessModalComponent } from './success-modal/success-modal.component';\nimport axios from 'axios';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.page.html',\n  styleUrls: ['./register.page.scss'],\n})\nexport class RegisterPage implements OnInit {\n\n  errors: any = {\n    name: [],\n    last_name: [],\n    email: [],\n    password: [],\n    phone1: [],\n  };\n\n  constructor(\n    private modalController: ModalController,\n    private http: HttpClient,\n    private lc: LoadingController,\n    private router: Router,\n  ) { }\n\n  ngOnInit() {\n  }\n\n  async onRegister(form: NgForm) {\n    if (!form.valid) {\n      return;\n    }\n    let name = form.value.name;\n    let wName = name.split(\" \");\n    name = wName[0];\n    let l_name = wName[1];\n    if (wName[2] !== undefined) {\n      l_name += \" \" + wName[2];\n    }\n    const email = form.value.email;\n    const password = form.value.password;\n    const phone1 = form.value.phone1;\n    const confirm_password = form.value.confirm_password;\n\n    if (password !== confirm_password) {\n      this.errors.password = ['Las contraseñas no coinciden'];\n      return;\n    }\n\n    const loader = await this.lc.create({\n      message: 'Registrando tu usuario...'\n    });\n\n    loader.present();\n\n    const body = {\n      name,\n      last_name: l_name,\n      email,\n      phone1,\n      password,\n    }\n\n    try {\n      let response = await axios.post(\n        `${API}/auth/register`,\n        body,\n        {\n          headers: {\n            'Content-Type': 'application/json',\n            'X-Requested-With': 'XMLHttpRequest'\n          }\n        }\n      );\n      const { success, data } = response.data\n      loader.dismiss();\n\n      if (success) {\n        this.clearErrors();\n        form.reset();\n        // modal for succes\n        const successModal = await this.modalController.create({\n          component: SuccessModalComponent,\n          cssClass: 'modalSuccess',\n        });\n        successModal.present();\n      } else {\n        if (data.length) {\n          this.errors.email = data;\n        }\n      }\n\n    } catch (error) {\n      const { response } = error;\n      if (response) {\n        const { errors } = response.data;\n\n        this.errors.name = [];\n        if (errors.name !== undefined) {\n          this.errors.name = errors.name;\n        }\n        this.errors.last_name = [];\n        if (errors.last_name !== undefined) {\n          this.errors.last_name = errors.last_name;\n        }\n        this.errors.email = [];\n        if (errors.email !== undefined) {\n          this.errors.email = errors.email;\n        }\n        this.errors.password = [];\n        if (errors.password !== undefined) {\n          this.errors.password = errors.password;\n        }\n      }\n\n      loader.dismiss();\n    }\n  }\n\n  clearErrors() {\n    this.errors.name = [];\n    this.errors.last_name = [];\n    this.errors.email = [];\n    this.errors.password = [];\n  }\n\n  goToTerms() {\n    this.router.navigate(['/terms']);\n  }\n\n  goToPrivacy() {\n    this.router.navigate(['/privacy']);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegisterPageRoutingModule } from './register-routing.module';\n\nimport { RegisterPage } from './register.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RegisterPageRoutingModule\n  ],\n  declarations: [RegisterPage]\n})\nexport class RegisterPageModule {}\n","export default \".title {\\n  font-size: 22px;\\n  font-weight: bold;\\n}\\n\\nhr {\\n  border-top: 1px solid #e54360;\\n}\\n\\n.privacy-text {\\n  font-family: Poppins;\\n  font-size: 14px;\\n  text-align: center;\\n}\\n\\n.privacy-text span {\\n  color: #009ace;\\n  cursor: pointer;\\n}\\n\\n@media (max-width: 380px) {\\n  small {\\n    font-size: 10px !important;\\n  }\\n}\\n\\n.ion-invalid.ion-touched ion-icon {\\n  color: #009ace;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3JlZ2lzdGVyLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGVBQUE7RUFDQSxpQkFBQTtBQUNGOztBQUNBO0VBQ0UsNkJBQUE7QUFFRjs7QUFBQTtFQUNFLG9CQUFBO0VBQ0EsZUFBQTtFQUNBLGtCQUFBO0FBR0Y7O0FBRkU7RUFDRSxjQUFBO0VBQ0EsZUFBQTtBQUlKOztBQUFFO0VBREY7SUFFSSwwQkFBQTtFQUlGO0FBQ0Y7O0FBRkE7RUFDRSxjQUFBO0FBS0YiLCJmaWxlIjoicmVnaXN0ZXIucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnRpdGxlIHtcbiAgZm9udC1zaXplOiAyMnB4O1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cbmhyIHtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNlNTQzNjA7XG59XG4ucHJpdmFjeS10ZXh0IHtcbiAgZm9udC1mYW1pbHk6IFBvcHBpbnM7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBzcGFuIHtcbiAgICBjb2xvcjogIzAwOWFjZTtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gIH1cbn1cbnNtYWxsIHtcbiAgQG1lZGlhIChtYXgtd2lkdGg6IDM4MHB4KSB7XG4gICAgZm9udC1zaXplOiAxMHB4ICFpbXBvcnRhbnQ7XG4gIH1cbn1cbi5pb24taW52YWxpZC5pb24tdG91Y2hlZCBpb24taWNvbiB7XG4gIGNvbG9yOiAjMDA5YWNlO1xufVxuIl19 */\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RegisterPage } from './register.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RegisterPageRoutingModule {}\n"]}