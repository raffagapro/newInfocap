{"version":3,"sources":["webpack:///src/app/login/register/register.page.html","webpack:///src/app/login/register/register.page.ts","webpack:///src/app/login/register/register.module.ts","webpack:///src/app/login/register/register.page.scss","webpack:///src/app/login/register/register-routing.module.ts"],"names":["RegisterPage","modalController","http","lc","errors","name","last_name","email","password","form","valid","value","wName","split","l_name","undefined","confirm_password","create","message","then","loadingEl","present","post","subscribe","resData","dismiss","clearErrors","reset","component","cssClass","modalEl","error","selector","template","RegisterPageModule","imports","declarations","routes","path","RegisterPageRoutingModule","forChild","exports"],"mappings":"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","file":"login-register-register-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/\\\" text=\\\"\\\" icon=\\\"arrow-back\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title class=\\\"ion-text-uppercase main-color title-toolbar\\\">Registrarse</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding\\\">\\n  <div style=\\\"height: 5%\\\"></div>\\n  <ion-grid>\\n\\n    <!-- title -->\\n    <ion-row>\\n      <ion-col size=\\\"1\\\" offset=\\\"1\\\"></ion-col>\\n      <ion-col size=\\\"8\\\" class=\\\"ion-text-center\\\">\\n        <ion-text class=\\\"main-color ion-text-uppercase title\\\">INGRESA TUS DATOS PERSONALES</ion-text>\\n      </ion-col>\\n      <ion-col size=\\\"1\\\"></ion-col>\\n\\n      <ion-col size=\\\"1\\\" offset=\\\"1\\\"></ion-col>\\n      <ion-col size=\\\"8\\\" class=\\\"ion-text-center\\\">\\n        <ion-text><hr></ion-text>\\n      </ion-col>\\n      <ion-col size=\\\"1\\\"></ion-col>\\n    </ion-row>\\n\\n    <!-- Register Inputs -->\\n    <form #f=\\\"ngForm\\\" (ngSubmit)=\\\"onRegister(f)\\\">\\n      <!-- nombre -->\\n      <ion-row>\\n        <ion-col size=\\\"11\\\">\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\" class=\\\"main-color\\\">\\n              <ion-icon name=\\\"person\\\" slot=\\\"start\\\" class=\\\"main-color\\\"></ion-icon>\\n              <ion-text class=\\\"main-color\\\">&nbsp;&nbsp;&nbsp;Nombre\\n              </ion-text>\\n            </ion-label>\\n            <ion-input\\n              ngModel name=\\\"name\\\"\\n              required\\n              #nameCtrl=\\\"ngModel\\\"\\n              type=\\\"text\\\">\\n            </ion-input>\\n          </ion-item>\\n          <!-- error  -->\\n          <ion-label *ngIf=\\\"!nameCtrl.valid && nameCtrl.touched\\\" class=\\\"errorMess\\\">\\n            <ion-icon name=\\\"alert-circle-outline\\\" class=\\\"iconFixG\\\" color=\\\"danger\\\"></ion-icon>\\n            <ion-text color=\\\"danger\\\">\\n              <small> El nombre es requerido</small>\\n            </ion-text>\\n          </ion-label>\\n          <!--  httpo name error  -->\\n          <ion-label *ngIf=\\\"errors.name[0] !== undefined\\\" class=\\\"errorMess\\\">\\n            <ion-icon name=\\\"alert-circle-outline\\\" class=\\\"iconFixG\\\" color=\\\"danger\\\"></ion-icon>\\n            <ion-text color=\\\"danger\\\">\\n              <small> {{ errors.name[0] }}</small>\\n            </ion-text><br>\\n          </ion-label>\\n           <!-- http last name error  -->\\n           <ion-label *ngIf=\\\"errors.last_name[0] !== undefined\\\" class=\\\"errorMess\\\">\\n            <ion-icon name=\\\"alert-circle-outline\\\" class=\\\"iconFixG\\\" color=\\\"danger\\\"></ion-icon>\\n            <ion-text color=\\\"danger\\\">\\n              <small> {{ errors.last_name[0] }}</small>\\n            </ion-text><br>\\n          </ion-label>\\n\\n        </ion-col>\\n      </ion-row>\\n\\n      <!-- email -->\\n      <ion-row>\\n        <ion-col size=\\\"11\\\">\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\">\\n              <ion-icon name=\\\"mail\\\" slot=\\\"start\\\" class=\\\"main-color\\\"></ion-icon>\\n              <ion-text class=\\\"main-color\\\">&nbsp;&nbsp;&nbsp;Email\\n              </ion-text>\\n            </ion-label>\\n            <ion-input\\n              ngModel name=\\\"email\\\"\\n              required\\n              email\\n              #emailCtrl=\\\"ngModel\\\"\\n              type=\\\"email\\\">\\n            </ion-input>\\n          </ion-item>\\n          <!-- error  -->\\n          <ion-label *ngIf=\\\"!emailCtrl.valid && emailCtrl.touched\\\" class=\\\"errorMess\\\">\\n            <ion-icon name=\\\"alert-circle-outline\\\" class=\\\"iconFixG\\\" color=\\\"danger\\\"></ion-icon>\\n            <ion-text color=\\\"danger\\\">\\n              <small> El email es requerido</small>\\n            </ion-text>\\n          </ion-label>\\n          <!-- http email error  -->\\n          <ion-label *ngIf=\\\"errors.email[0] !== undefined\\\" class=\\\"errorMess\\\">\\n            <ion-icon name=\\\"alert-circle-outline\\\" class=\\\"iconFixG\\\" color=\\\"danger\\\"></ion-icon>\\n            <ion-text color=\\\"danger\\\">\\n              <small> {{ errors.email[0] }}</small>\\n            </ion-text><br>\\n          </ion-label>\\n         \\n\\n        </ion-col>\\n      </ion-row>\\n\\n      <!-- password -->\\n      <ion-row>\\n        <ion-col size=\\\"11\\\">\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\" class=\\\"main-color\\\">\\n              <ion-icon name=\\\"lock-closed\\\" slot=\\\"start\\\" class=\\\"main-color\\\"></ion-icon>\\n              <ion-text class=\\\"main-color\\\">&nbsp;&nbsp;&nbsp;Contrase√±a</ion-text>\\n            </ion-label>\\n            <ion-input\\n              ngModel name=\\\"password\\\"\\n              minlength=\\\"8\\\"\\n              required\\n              #passwordCtrl=\\\"ngModel\\\"\\n              type=\\\"password\\\">\\n            </ion-input>\\n          </ion-item>\\n          <!-- error  -->\\n          <ion-label *ngIf=\\\"!passwordCtrl.valid && passwordCtrl.touched\\\" class=\\\"errorMess\\\">\\n            <ion-icon name=\\\"alert-circle-outline\\\" class=\\\"iconFixG\\\" color=\\\"danger\\\"></ion-icon>\\n            <ion-text color=\\\"danger\\\">\\n              <small> El password es requerido</small>\\n            </ion-text>\\n          </ion-label>\\n          <!-- http password error  -->\\n          <ion-label *ngIf=\\\"errors.password[0] !== undefined\\\" class=\\\"errorMess\\\">\\n            <ion-icon name=\\\"alert-circle-outline\\\" class=\\\"iconFixG\\\" color=\\\"danger\\\"></ion-icon>\\n            <ion-text color=\\\"danger\\\">\\n              <small> {{ errors.password[0] }}</small>\\n            </ion-text>\\n          </ion-label>\\n\\n        </ion-col>\\n      </ion-row>\\n\\n      <!-- password confirm -->\\n      <ion-row>\\n        <ion-col size=\\\"11\\\">\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\" class=\\\"main-color\\\">\\n              <ion-icon name=\\\"lock-closed\\\" slot=\\\"start\\\" class=\\\"main-color\\\"></ion-icon>\\n              <ion-text class=\\\"main-color\\\">&nbsp;&nbsp;&nbsp;Repetir contrase√±a</ion-text>\\n            </ion-label>\\n            <ion-input\\n              ngModel name=\\\"confirm_password\\\"\\n              minlength=\\\"8\\\"\\n              required\\n              type=\\\"password\\\">\\n            </ion-input>\\n          </ion-item>\\n        </ion-col>\\n      </ion-row>\\n\\n      <!-- Registrar BTN -->\\n      <ion-row class=\\\"ion-margin-top\\\">\\n        <ion-col class=\\\"ion-margin-top\\\">\\n          <ion-button\\n            expand=\\\"block\\\"\\n            type=\\\"submit\\\"\\n            [disabled]=\\\"!f.valid\\\" \\n            class=\\\"ion-text-uppercase\\\">\\n            Registrarme\\n          </ion-button>\\n        </ion-col>\\n      </ion-row>\\n\\n    </form>\\n  </ion-grid>\\n</ion-content>\\n\";","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { LoadingController, ModalController } from '@ionic/angular';\nimport { API } from 'src/environments/environment';\nimport { SuccessModalComponent } from './success-modal/success-modal.component';\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.page.html',\n  styleUrls: ['./register.page.scss'],\n})\nexport class RegisterPage implements OnInit {\n\n  errors: any = {\n    name: [],\n    last_name: [],\n    email: [],\n    password: []\n  };\n\n  constructor(\n    private modalController: ModalController,\n    private http: HttpClient,\n    private lc: LoadingController,\n  ) { }\n\n  ngOnInit() {\n  }\n\n  onRegister(form: NgForm){\n    if (!form.valid) {\n      return;\n    }\n    let name = form.value.name;\n    let wName = name.split(\" \");\n    name = wName[0];\n    let l_name = wName[1];\n    if (wName[2] !== undefined) {\n      l_name += \" \"+ wName[2];\n    }\n    // console.log(l_name);\n    const email = form.value.email;\n    const password = form.value.password;\n    const confirm_password = form.value.confirm_password;\n    // console.log(password, confirm_password);\n    \n    if (password !== confirm_password) {\n      // console.log('wrong PW mudafucker');\n      this.errors.password = ['Las contrase√±as no coinciden'];\n      return;\n    }\n    // console.log(form);\n    this.lc.create({\n      message: 'Creando usuario...'\n    }).then(loadingEl => {\n      loadingEl.present();\n      this.http.post(API+'/auth/register', {\n        // this.http.post('http://127.0.0.1:8000/api/auth/register', {\n        name: name,\n        last_name: l_name,\n        email: email,\n        password: password,\n      }).subscribe(resData => {\n        loadingEl.dismiss();\n        if (resData['code'] === 200) {\n          this.clearErrors();\n          form.reset();\n          // modal for succes\n          this.modalController.create({\n            component: SuccessModalComponent,\n            cssClass: 'modalSuccess',\n          }).then(modalEl => {\n            modalEl.present();\n          });\n        }\n      },error => {\n        // console.log(error.error.errors.name);\n        // console.log(this.errors.name.lenght);\n        this.errors.name = [];\n        if (error.error.errors.name !== undefined) {\n          this.errors.name = error.error.errors.name; \n        }\n        this.errors.last_name = [];\n        if (error.error.errors.last_name !== undefined) {\n          this.errors.last_name = error.error.errors.last_name; \n        }\n        this.errors.email = [];\n        if (error.error.errors.email !== undefined) {\n         this.errors.email = error.error.errors.email; \n        }\n        this.errors.password = [];\n        if (error.error.errors.password !== undefined) {\n          this.errors.password = error.error.errors.password; \n        }  \n      });\n    });\n  }\n\n  clearErrors(){\n    this.errors.name = [];\n    this.errors.last_name = [];\n    this.errors.email = [];\n    this.errors.password = [];\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegisterPageRoutingModule } from './register-routing.module';\n\nimport { RegisterPage } from './register.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RegisterPageRoutingModule\n  ],\n  declarations: [RegisterPage]\n})\nexport class RegisterPageModule {}\n","export default \".title {\\n  font-size: 22px;\\n  font-weight: bold;\\n}\\n\\nhr {\\n  border-top: 1px solid #E54360;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3JlZ2lzdGVyLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGVBQUE7RUFDQSxpQkFBQTtBQUNGOztBQUNBO0VBQ0UsNkJBQUE7QUFFRiIsImZpbGUiOiJyZWdpc3Rlci5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudGl0bGV7XG4gIGZvbnQtc2l6ZTogMjJweDtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5ociB7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAjRTU0MzYwO1xufVxuIl19 */\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RegisterPage } from './register.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RegisterPageRoutingModule {}\n"]}