{"version":3,"sources":["webpack:///src/app/login/register/register.page.html","webpack:///src/app/login/register/register.page.ts","webpack:///src/app/login/register/register.module.ts","webpack:///src/app/login/register/register.page.scss","webpack:///src/app/login/register/register-routing.module.ts"],"names":["RegisterPage","modalController","http","lc","router","passwordTypeInput","countryCodes","errors","name","last_name","email","password","phone1","hide","getCountryCodes","loadFlags","bind","form","console","log","valid","value","wName","split","l_name","undefined","countryCode","confirm_password","create","message","loader","present","body","a","post","headers","response","data","success","dismiss","clearErrors","reset","component","cssClass","successModal","length","get","navigate","setTimeout","radios","document","getElementsByClassName","index","element","innerHTML","flag","read","selector","template","RegisterPageModule","imports","declarations","routes","path","RegisterPageRoutingModule","forChild","exports"],"mappings":"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","file":"login-register-register-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar mode=\\\"ios\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/\\\" text=\\\"\\\" icon=\\\"arrow-back\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title class=\\\"ion-text-uppercase main-color title-toolbar\\\">Registrarse</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding\\\">\\n  <div class=\\\"spacing\\\"></div>\\n  <ion-grid>\\n\\n    <!-- title -->\\n    <ion-row>\\n      <ion-col size=\\\"1\\\" offset=\\\"1\\\"></ion-col>\\n      <ion-col size=\\\"8\\\" class=\\\"ion-text-center\\\">\\n        <ion-text class=\\\"main-color ion-text-uppercase title\\\">INGRESA TUS DATOS PERSONALES</ion-text>\\n      </ion-col>\\n      <ion-col size=\\\"1\\\"></ion-col>\\n\\n      <ion-col size=\\\"1\\\" offset=\\\"1\\\"></ion-col>\\n      <ion-col size=\\\"8\\\" class=\\\"ion-text-center\\\">\\n        <ion-text>\\n          <hr>\\n        </ion-text>\\n      </ion-col>\\n      <ion-col size=\\\"1\\\"></ion-col>\\n    </ion-row>\\n\\n    <!-- Register Inputs -->\\n    <form #f=\\\"ngForm\\\" (ngSubmit)=\\\"onRegister(f)\\\">\\n      <!-- nombre -->\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          <ion-item class=\\\"ion-no-padding\\\">\\n            <ion-label position=\\\"floating\\\" class=\\\"main-color\\\">\\n              <ion-icon name=\\\"person\\\" slot=\\\"start\\\" class=\\\"main-color\\\"></ion-icon>\\n              <ion-text class=\\\"main-color\\\">&nbsp;&nbsp;&nbsp;Nombre\\n              </ion-text>\\n            </ion-label>\\n            <ion-input ngModel name=\\\"name\\\" required #nameCtrl=\\\"ngModel\\\" type=\\\"text\\\">\\n            </ion-input>\\n          </ion-item>\\n          <!-- error  -->\\n          <ion-label *ngIf=\\\"!nameCtrl.valid && nameCtrl.touched\\\" class=\\\"errorMess text-center\\\">\\n            <ion-icon name=\\\"alert-circle-outline\\\" class=\\\"iconFixG\\\" color=\\\"danger\\\"></ion-icon>\\n            <ion-text color=\\\"danger\\\">\\n              <small> El nombre es requerido</small>\\n            </ion-text>\\n          </ion-label>\\n          <!--  httpo name error  -->\\n          <ion-label *ngIf=\\\"errors.name[0] !== undefined\\\" class=\\\"errorMess text-center\\\">\\n            <ion-icon name=\\\"alert-circle-outline\\\" class=\\\"iconFixG\\\" color=\\\"danger\\\"></ion-icon>\\n            <ion-text color=\\\"danger\\\">\\n              <small> {{ errors.name[0] }}</small>\\n            </ion-text><br>\\n          </ion-label>\\n          <!-- http last name error  -->\\n          <ion-label *ngIf=\\\"errors.last_name[0] !== undefined\\\" class=\\\"errorMess text-center\\\">\\n            <ion-icon name=\\\"alert-circle-outline\\\" class=\\\"iconFixG\\\" color=\\\"danger\\\"></ion-icon>\\n            <ion-text color=\\\"danger\\\">\\n              <small> {{ errors.last_name[0] }}</small>\\n            </ion-text><br>\\n          </ion-label>\\n\\n        </ion-col>\\n      </ion-row>\\n\\n      <!-- email -->\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          <ion-item class=\\\"ion-no-padding\\\">\\n            <ion-label position=\\\"floating\\\">\\n              <ion-icon src=\\\"/assets/icon/ic_mail.svg\\\" slot=\\\"start\\\" class=\\\"main-color\\\"></ion-icon>\\n              <ion-text class=\\\"main-color\\\">&nbsp;&nbsp;&nbsp;Email\\n              </ion-text>\\n            </ion-label>\\n            <ion-input ngModel name=\\\"email\\\" required email #emailCtrl=\\\"ngModel\\\" type=\\\"email\\\">\\n            </ion-input>\\n          </ion-item>\\n          <!-- error  -->\\n          <ion-label *ngIf=\\\"!emailCtrl.valid && emailCtrl.touched\\\" class=\\\"errorMess\\\">\\n            <ion-icon name=\\\"alert-circle-outline\\\" class=\\\"iconFixG\\\" color=\\\"danger\\\"></ion-icon>\\n            <ion-text color=\\\"danger\\\">\\n              <small> El email es requerido</small>\\n            </ion-text>\\n          </ion-label>\\n          <!-- http email error  -->\\n          <ion-label *ngIf=\\\"errors.email[0] !== undefined\\\" class=\\\"errorMess\\\">\\n            <ion-icon name=\\\"alert-circle-outline\\\" class=\\\"iconFixG\\\" color=\\\"danger\\\"></ion-icon>\\n            <ion-text color=\\\"danger\\\">\\n              <small class=\\\"error-text\\\"> {{ errors.email[0] }}</small>\\n            </ion-text><br>\\n          </ion-label>\\n\\n\\n        </ion-col>\\n      </ion-row>\\n\\n      <!-- phone -->\\n      <ion-row>\\n        <ion-col size=\\\"5\\\">\\n          <ion-item class=\\\"ion-no-padding\\\">\\n            <ion-label position=\\\"floating\\\">\\n              <ion-icon src=\\\"/assets/icon/ic_phone.svg\\\" slot=\\\"start\\\" class=\\\"main-color\\\"></ion-icon>\\n              <ion-text class=\\\"main-color\\\">&nbsp;&nbsp;&nbsp;Código</ion-text>\\n            </ion-label>\\n            <ion-select (click)=\\\"loadFlags()\\\" ngModel name=\\\"countryCode\\\" required #phone1Ctrl=\\\"ngModel\\\"\\n              placeholder=\\\"Código\\\" [cancelText]=\\\"'Cancelar'\\\" [okText]=\\\"'Aceptar'\\\">\\n              <ion-select-option mode=\\\"ios\\\" *ngFor=\\\"let country of countryCodes\\\" value=\\\"+{{country.callingCodes[0]}}\\\">\\n                {{country.alpha2Code}} +{{country.callingCodes[0]}}\\n              </ion-select-option>\\n            </ion-select>\\n          </ion-item>\\n        </ion-col>\\n        <ion-col size=\\\"7\\\">\\n          <ion-item class=\\\"ion-no-padding\\\">\\n            <ion-label position=\\\"floating\\\" class=\\\"main-color\\\">\\n              <ion-icon src=\\\"/assets/icon/ic_phone.svg\\\" slot=\\\"start\\\" class=\\\"main-color\\\"></ion-icon>\\n              <ion-text class=\\\"main-color\\\">&nbsp;&nbsp;&nbsp;Teléfono</ion-text>\\n            </ion-label>\\n            <ion-input ngModel name=\\\"phone1\\\" minlength=\\\"9\\\" maxlength=\\\"9\\\" required #phone1Ctrl=\\\"ngModel\\\" type=\\\"tel\\\">\\n            </ion-input>\\n          </ion-item>\\n          <!-- error  -->\\n          <ion-label *ngIf=\\\"!phone1Ctrl.valid && phone1Ctrl.touched\\\" class=\\\"errorMess\\\">\\n            <ion-icon name=\\\"alert-circle-outline\\\" class=\\\"iconFixG\\\" color=\\\"danger\\\"></ion-icon>\\n            <ion-text color=\\\"danger\\\">\\n              <small> El teléfono debe ser de 9 dígitos</small>\\n            </ion-text>\\n          </ion-label>\\n        </ion-col>\\n      </ion-row>\\n\\n      <!-- password -->\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          <ion-item class=\\\"ion-no-padding\\\">\\n            <ion-label position=\\\"floating\\\" class=\\\"main-color\\\">\\n              <ion-icon src=\\\"/assets/icon/ic_lock.svg\\\" class=\\\"main-color\\\"></ion-icon>\\n              <ion-text class=\\\"main-color\\\">&nbsp;&nbsp;&nbsp;Contraseña</ion-text>\\n            </ion-label>\\n            <ion-input ngModel name=\\\"password\\\" minlength=\\\"8\\\" required #passwordCtrl=\\\"ngModel\\\"\\n              [type]=\\\"passwordTypeInput\\\">\\n            </ion-input>\\n            <button item-end class=\\\"btn_eye_icon\\\" type=\\\"button\\\" (click)=\\\"togglePasswordMode()\\\">\\n              <ion-icon [name]=\\\"(passwordTypeInput === 'text')?'eye':'eye-off'\\\"></ion-icon>\\n            </button>\\n          </ion-item>\\n          <!-- error  -->\\n          <ion-label *ngIf=\\\"!passwordCtrl.valid && passwordCtrl.touched\\\" class=\\\"errorMess\\\">\\n            <ion-icon name=\\\"alert-circle-outline\\\" class=\\\"iconFixG\\\" color=\\\"danger\\\"></ion-icon>\\n            <ion-text color=\\\"danger\\\">\\n              <small> El password es requerido</small>\\n            </ion-text>\\n          </ion-label>\\n          <!-- http password error  -->\\n          <ion-label *ngIf=\\\"errors.password[0] !== undefined\\\" class=\\\"errorMess\\\">\\n            <ion-icon name=\\\"alert-circle-outline\\\" class=\\\"iconFixG\\\" color=\\\"danger\\\"></ion-icon>\\n            <ion-text color=\\\"danger\\\">\\n              <small> {{ errors.password[0] }}</small>\\n            </ion-text>\\n          </ion-label>\\n\\n        </ion-col>\\n      </ion-row>\\n\\n      <!-- password confirm -->\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          <ion-item class=\\\"ion-no-padding\\\">\\n            <ion-label position=\\\"floating\\\" class=\\\"main-color\\\">\\n              <ion-icon src=\\\"/assets/icon/ic_lock.svg\\\" class=\\\"main-color\\\"></ion-icon>\\n              <ion-text class=\\\"main-color\\\">&nbsp;&nbsp;&nbsp;Repetir contraseña</ion-text>\\n            </ion-label>\\n            <ion-input ngModel name=\\\"confirm_password\\\" minlength=\\\"8\\\" required [type]=\\\"passwordTypeInput\\\">\\n            </ion-input>\\n            <button item-end class=\\\"btn_eye_icon\\\" type=\\\"button\\\" (click)=\\\"togglePasswordMode()\\\">\\n              <ion-icon [name]=\\\"(passwordTypeInput === 'text')?'eye':'eye-off'\\\"></ion-icon>\\n            </button>\\n          </ion-item>\\n        </ion-col>\\n      </ion-row>\\n\\n      <!-- Registrar BTN -->\\n      <ion-row class=\\\"ion-margin-top\\\">\\n        <ion-col class=\\\"ion-margin-top\\\" size=\\\"12\\\">\\n          <ion-button expand=\\\"block\\\" type=\\\"submit\\\" [disabled]=\\\"!f.valid\\\" class=\\\"ion-text-uppercase\\\">\\n            Registrarme\\n          </ion-button>\\n        </ion-col>\\n        <ion-col size=\\\"12\\\">\\n          <ion-text class=\\\"privacy-text\\\">\\n            <p>\\n              Al continuar e iniciar sesión usted acepta nuestra <span (click)=\\\"goToPrivacy()\\\">Política de\\n                privacidad</span> y los\\n              <span (click)=\\\"goToTerms()\\\">Términos\\n                y condiciones</span>\\n            </p>\\n          </ion-text>\\n        </ion-col>\\n      </ion-row>\\n\\n    </form>\\n  </ion-grid>\\n</ion-content>\";","import { HttpClient } from \"@angular/common/http\";\nimport { Component, ElementRef, OnInit, ViewChild } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\nimport { LoadingController, ModalController } from \"@ionic/angular\";\nimport { API } from \"src/environments/environment\";\nimport { SuccessModalComponent } from \"./success-modal/success-modal.component\";\nimport axios from \"axios\";\nimport { Router } from \"@angular/router\";\nimport { StatusBar } from \"@capacitor/status-bar\";\n\n@Component({\n\tselector: \"app-register\",\n\ttemplateUrl: \"./register.page.html\",\n\tstyleUrls: [\"./register.page.scss\"],\n})\nexport class RegisterPage implements OnInit {\n\t@ViewChild(\"passwordEyeRegister\", { read: ElementRef })\n\tpasswordEye: ElementRef;\n\tpasswordTypeInput = \"password\";\n\tcountryCodes = [];\n\terrors: any = {\n\t\tname: [],\n\t\tlast_name: [],\n\t\temail: [],\n\t\tpassword: [],\n\t\tphone1: [],\n\t};\n\n\tconstructor(\n\t\tprivate modalController: ModalController,\n\t\tprivate http: HttpClient,\n\t\tprivate lc: LoadingController,\n\t\tprivate router: Router\n\t) {}\n\n\tngOnInit() {\n\t\tStatusBar.hide();\n\t\tthis.getCountryCodes();\n\t\tthis.loadFlags = this.loadFlags.bind(this);\n\t}\n\n\tasync onRegister(form: NgForm) {\n\t\tconsole.log(form);\n\t\tif (!form.valid) {\n\t\t\treturn;\n\t\t}\n\t\tlet name = form.value.name;\n\t\tlet wName = name.split(\" \");\n\t\tname = wName[0];\n\t\tlet l_name = wName[1];\n\t\tif (wName[2] !== undefined) {\n\t\t\tl_name += \" \" + wName[2];\n\t\t}\n\t\tconst email = form.value.email;\n\t\tconst password = form.value.password;\n\t\tconst phone1 = `${form.value.countryCode} ${form.value.phone1}`;\n\t\tconst confirm_password = form.value.confirm_password;\n\n\t\tif (password !== confirm_password) {\n\t\t\tthis.errors.password = [\"Las contraseñas no coinciden\"];\n\t\t\treturn;\n\t\t}\n\n\t\tconst loader = await this.lc.create({\n\t\t\tmessage: \"Registrando tu usuario...\",\n\t\t});\n\n\t\tloader.present();\n\n\t\tconst body = {\n\t\t\tname,\n\t\t\tlast_name: l_name,\n\t\t\temail,\n\t\t\tphone1,\n\t\t\tpassword,\n\t\t};\n\n\t\ttry {\n\t\t\tlet response = await axios.post(`${API}/auth/register`, body, {\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t\t\"X-Requested-With\": \"XMLHttpRequest\",\n\t\t\t\t},\n\t\t\t});\n\t\t\tconst { success, data } = response.data;\n\t\t\tloader.dismiss();\n\n\t\t\tif (success) {\n\t\t\t\tthis.clearErrors();\n\t\t\t\tform.reset();\n\t\t\t\t// modal for succes\n\t\t\t\tconst successModal = await this.modalController.create({\n\t\t\t\t\tcomponent: SuccessModalComponent,\n\t\t\t\t\tcssClass: \"modalSuccess\",\n\t\t\t\t});\n\t\t\t\tsuccessModal.present();\n\t\t\t} else {\n\t\t\t\tif (data.length) {\n\t\t\t\t\tthis.errors.email = data;\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconst { response } = error;\n\t\t\tif (response) {\n\t\t\t\tconst { errors } = response.data;\n\n\t\t\t\tthis.errors.name = [];\n\t\t\t\tif (errors.name !== undefined) {\n\t\t\t\t\tthis.errors.name = errors.name;\n\t\t\t\t}\n\t\t\t\tthis.errors.last_name = [];\n\t\t\t\tif (errors.last_name !== undefined) {\n\t\t\t\t\tthis.errors.last_name = errors.last_name;\n\t\t\t\t}\n\t\t\t\tthis.errors.email = [];\n\t\t\t\tif (errors.email !== undefined) {\n\t\t\t\t\tthis.errors.email = errors.email;\n\t\t\t\t}\n\t\t\t\tthis.errors.password = [];\n\t\t\t\tif (errors.password !== undefined) {\n\t\t\t\t\tthis.errors.password = errors.password;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tloader.dismiss();\n\t\t}\n\t}\n\n\tasync getCountryCodes() {\n\t\ttry {\n\t\t\tlet response = await axios.get(\n\t\t\t\t\"https://restcountries.eu/rest/v2/region/Americas\"\n\t\t\t);\n\t\t\tthis.countryCodes = response.data;\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t}\n\n\tclearErrors() {\n\t\tthis.errors.name = [];\n\t\tthis.errors.last_name = [];\n\t\tthis.errors.email = [];\n\t\tthis.errors.password = [];\n\t}\n\n\tgoToTerms() {\n\t\tthis.router.navigate([\"/terms\"]);\n\t}\n\n\tgoToPrivacy() {\n\t\tthis.router.navigate([\"/privacy\"]);\n\t}\n\ttogglePasswordMode() {\n\t\tthis.passwordTypeInput =\n\t\t\tthis.passwordTypeInput === \"text\" ? \"password\" : \"text\";\n\t}\n\n\tloadFlags() {\n\t\tsetTimeout(() => {\n\t\t\tlet radios = document.getElementsByClassName(\n\t\t\t\t\"alert-radio-label sc-ion-alert-md\"\n\t\t\t);\n\t\t\tfor (let index = 0; index < radios.length; index++) {\n\t\t\t\tlet element = radios[index];\n\t\t\t\telement.innerHTML = `<img class=\"country-image\" style=\"width: 30px;height:16px;\" src=\"${this.countryCodes[index].flag}\" /> ${element.innerHTML}`;\n\t\t\t}\n\t\t}, 100);\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegisterPageRoutingModule } from './register-routing.module';\n\nimport { RegisterPage } from './register.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RegisterPageRoutingModule\n  ],\n  declarations: [RegisterPage]\n})\nexport class RegisterPageModule {}\n","export default \".title {\\n  font-size: 22px;\\n  font-weight: bold;\\n}\\n\\nhr {\\n  border-top: 1px solid #e54360;\\n}\\n\\n.privacy-text {\\n  font-family: Poppins;\\n  font-size: 14px;\\n  text-align: center;\\n}\\n\\n.privacy-text span {\\n  color: #009ace;\\n  cursor: pointer;\\n}\\n\\n@media (max-width: 380px) {\\n  small {\\n    font-size: 10px !important;\\n  }\\n}\\n\\n.ion-invalid.ion-touched ion-icon {\\n  color: #009ace;\\n}\\n\\n.main-color {\\n  font-size: 15px;\\n}\\n\\n.spacing {\\n  height: 5%;\\n}\\n\\n@media (min-width: 768px) {\\n  .spacing {\\n    height: 10%;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3JlZ2lzdGVyLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGVBQUE7RUFDQSxpQkFBQTtBQUNGOztBQUNBO0VBQ0UsNkJBQUE7QUFFRjs7QUFBQTtFQUNFLG9CQUFBO0VBQ0EsZUFBQTtFQUNBLGtCQUFBO0FBR0Y7O0FBRkU7RUFDRSxjQUFBO0VBQ0EsZUFBQTtBQUlKOztBQUFFO0VBREY7SUFFSSwwQkFBQTtFQUlGO0FBQ0Y7O0FBRkE7RUFDRSxjQUFBO0FBS0Y7O0FBSEE7RUFDRSxlQUFBO0FBTUY7O0FBSkE7RUFDRSxVQUFBO0FBT0Y7O0FBTEU7RUFIRjtJQUlJLFdBQUE7RUFRRjtBQUNGIiwiZmlsZSI6InJlZ2lzdGVyLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi50aXRsZSB7XG4gIGZvbnQtc2l6ZTogMjJweDtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5ociB7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZTU0MzYwO1xufVxuLnByaXZhY3ktdGV4dCB7XG4gIGZvbnQtZmFtaWx5OiBQb3BwaW5zO1xuICBmb250LXNpemU6IDE0cHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgc3BhbiB7XG4gICAgY29sb3I6ICMwMDlhY2U7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICB9XG59XG5zbWFsbCB7XG4gIEBtZWRpYSAobWF4LXdpZHRoOiAzODBweCkge1xuICAgIGZvbnQtc2l6ZTogMTBweCAhaW1wb3J0YW50O1xuICB9XG59XG4uaW9uLWludmFsaWQuaW9uLXRvdWNoZWQgaW9uLWljb24ge1xuICBjb2xvcjogIzAwOWFjZTtcbn1cbi5tYWluLWNvbG9yIHtcbiAgZm9udC1zaXplOiAxNXB4O1xufVxuLnNwYWNpbmcge1xuICBoZWlnaHQ6IDUlO1xuXG4gIEBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAgIGhlaWdodDogMTAlO1xuICB9XG59XG4iXX0= */\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RegisterPage } from './register.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RegisterPageRoutingModule {}\n"]}