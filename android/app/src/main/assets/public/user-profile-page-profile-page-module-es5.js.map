{"version":3,"sources":["webpack:///src/app/user/profile-page/profile-page-routing.module.ts","webpack:///src/app/user/profile-page/profile-page.page.html","webpack:///src/app/user/profile-page/profile-page.page.scss","webpack:///src/app/user/profile-page/profile-page.page.ts","webpack:///src/app/user/profile-page/profile-page.module.ts"],"names":["routes","path","component","ProfilePagePageRoutingModule","imports","forChild","exports","base64toBlob","base64Data","contentType","sliceSize","byteCharacters","atob","bytesLength","length","slicesCount","Math","ceil","byteArrays","Array","sliceIndex","begin","end","min","bytes","offset","i","charCodeAt","Uint8Array","Blob","type","ProfilePagePage","us","lc","http","modalController","platform","imgPick","useInputPicker","userSub","loggedUser","subscribe","user","grabbedUser","headers","set","access_token","phone1","phone2","form","name","last_name","updateOn","validators","required","email","password","newPassword","confirmPassword","is","httpError","passError","value","split","lname","modUser","current_password","create","message","then","loadingEl","present","put","resData","dismiss","setUser","id","img_profile","role","setValue","componentProps","redirect","cssClass","modalEl","e","isPluginAvailable","hiddenImgInputRef","nativeElement","click","Camera","getPhoto","quality","source","Prompt","correctOrientation","resultType","DataUrl","promptLabelPhoto","promptLabelPicture","promptLabelCancel","image","saveImgToApi","dataUrl","console","log","loadedFile","target","files","imageData","imgFile","replace","patchValue","formData","FormData","append","post","dbUserGrab","err","unsubscribe","token","get","img","selector","template","ProfilePagePageModule","declarations"],"mappings":"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","file":"user-profile-page-profile-page-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ProfilePagePage } from './profile-page.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProfilePagePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProfilePagePageRoutingModule {}\n","export default \"<ion-header>\\n  <ion-toolbar mode=\\\"ios\\\" color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/user/home\\\" text=\\\"\\\" icon=\\\"arrow-back\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title class=\\\"title-toolbar\\\">EDITAR USUARIO</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-grid>\\n\\n    <!-- profile Img -->\\n    <ion-row class=\\\"imgCont\\\">\\n      <ion-col>\\n        <ion-avatar class=\\\"ion-margin-start profileImg\\\">\\n          <ion-img [src]=\\\"getProfilePicture()\\\"></ion-img>\\n        </ion-avatar>\\n      </ion-col>\\n    </ion-row>\\n    <!-- edit icon -->\\n    <ion-row>\\n      <ion-col>\\n        <div class=\\\"rate-cont\\\" *ngIf=\\\"grabbedUser.id !== null\\\" (click)=\\\"onLoadImg()\\\">\\n          <ion-icon name=\\\"pencil\\\" class=\\\"profileIcon\\\"></ion-icon>\\n        </div>\\n      </ion-col>\\n    </ion-row>\\n\\n    <!-- hidden file input -->\\n    <div style=\\\"display: none;\\\">\\n      <input type=\\\"file\\\" #hiddenImgInput *ngIf=\\\"useInputPicker\\\" (change)=\\\"onLoadImgFromInput($event)\\\">\\n    </div>\\n\\n    <!-- Register Inputs -->\\n    <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onUpdateUser()\\\">\\n      <!-- nombre -->\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          <ion-item class=\\\"ion-no-padding\\\">\\n            <ion-label position=\\\"floating\\\" class=\\\"main-color\\\">\\n              <ion-icon name=\\\"person\\\" slot=\\\"start\\\" class=\\\"main-color\\\"></ion-icon>\\n              <ion-text class=\\\"main-color\\\">&nbsp;&nbsp;&nbsp;Nombre</ion-text>\\n            </ion-label>\\n            <ion-input type=\\\"text\\\" formControlName=\\\"name\\\"></ion-input>\\n          </ion-item>\\n          <!-- error  -->\\n          <ion-label *ngIf=\\\"form.get('name').hasError('required')\\\" class=\\\"errorMess\\\">\\n            <ion-icon name=\\\"alert-circle-outline\\\" class=\\\"iconFixG\\\" color=\\\"danger\\\"></ion-icon>\\n            <ion-text color=\\\"danger\\\">\\n              <small> El nombre es requerido</small>\\n            </ion-text>\\n          </ion-label>\\n        </ion-col>\\n      </ion-row>\\n\\n      <!-- email -->\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          <ion-item class=\\\"ion-no-padding\\\">\\n            <ion-label position=\\\"floating\\\">\\n              <ion-icon src=\\\"/assets/icon/ic_mail.svg\\\" slot=\\\"start\\\" class=\\\"main-color\\\"></ion-icon>\\n              <ion-text class=\\\"main-color\\\">&nbsp;&nbsp;&nbsp;Email</ion-text>\\n            </ion-label>\\n            <ion-input type=\\\"text\\\" disabled formControlName=\\\"email\\\"></ion-input>\\n          </ion-item>\\n          <!-- error requerido  -->\\n          <ion-label *ngIf=\\\"form.get('email').hasError('required')\\\" class=\\\"errorMess\\\">\\n            <ion-icon name=\\\"alert-circle-outline\\\" class=\\\"iconFixG\\\" color=\\\"danger\\\"></ion-icon>\\n            <ion-text color=\\\"danger\\\">\\n              <small> El email es requerido</small>\\n            </ion-text>\\n          </ion-label>\\n          <!-- error email  -->\\n          <ion-label *ngIf=\\\"form.get('email').hasError('email')\\\" class=\\\"errorMess\\\">\\n            <ion-icon name=\\\"alert-circle-outline\\\" class=\\\"iconFixG\\\" color=\\\"danger\\\"></ion-icon>\\n            <ion-text color=\\\"danger\\\">\\n              <small> El email no tiene el formato correcto</small>\\n            </ion-text>\\n          </ion-label>\\n        </ion-col>\\n      </ion-row>\\n\\n      <!-- Número de contacto 1 -->\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          <ion-item class=\\\"ion-no-padding\\\">\\n            <ion-label position=\\\"floating\\\" class=\\\"main-color\\\">\\n              <ion-icon src=\\\"/assets/icon/ic_phone.svg\\\" slot=\\\"start\\\" class=\\\"main-color\\\"></ion-icon>\\n              <ion-text class=\\\"main-color\\\">&nbsp;&nbsp;&nbsp;Número de contacto</ion-text>\\n            </ion-label>\\n            <ion-input type=\\\"number\\\" pattern=\\\"\\\\d*\\\" formControlName=\\\"phone1\\\"></ion-input>\\n          </ion-item>\\n          <!-- error requerido  -->\\n          <ion-label *ngIf=\\\"form.get('phone1').hasError('required')\\\" class=\\\"errorMess\\\">\\n            <ion-icon name=\\\"alert-circle-outline\\\" class=\\\"iconFixG\\\" color=\\\"danger\\\"></ion-icon>\\n            <ion-text color=\\\"danger\\\">\\n              <small> El Numero de contacto es requerido</small>\\n            </ion-text>\\n          </ion-label>\\n        </ion-col>\\n      </ion-row>\\n\\n      <!-- Número de contacto 2 -->\\n      <!-- <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          <ion-item class=\\\"ion-no-padding\\\">\\n            <ion-label position=\\\"floating\\\" class=\\\"main-color\\\">\\n              <ion-icon name=\\\"call\\\" slot=\\\"start\\\" class=\\\"main-color\\\"></ion-icon>\\n              <ion-text class=\\\"main-color\\\">&nbsp;&nbsp;&nbsp;Número de contacto 2</ion-text>\\n            </ion-label>\\n            <ion-input type=\\\"string\\\" formControlName=\\\"phone2\\\"></ion-input>\\n          </ion-item>\\n        </ion-col>\\n      </ion-row> -->\\n\\n\\n      <!-- title -->\\n      <div style=\\\"height: 30px;\\\"></div>\\n      <ion-row class=\\\"ion-margin-top\\\">\\n        <ion-col size=\\\"1\\\" offset=\\\"1\\\"></ion-col>\\n        <ion-col size=\\\"8\\\" class=\\\"ion-text-center\\\">\\n          <ion-text class=\\\"main-color ion-text-uppercase title\\\"><b>CAMBIAR CONTRASEÑA</b></ion-text>\\n        </ion-col>\\n        <ion-col size=\\\"1\\\"></ion-col>\\n      </ion-row>\\n\\n      <!-- Contraseña actual -->\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          <ion-item class=\\\"ion-no-padding\\\">\\n            <ion-label position=\\\"floating\\\" class=\\\"main-color\\\">\\n              <ion-icon src=\\\"/assets/icon/ic_lock.svg\\\" slot=\\\"start\\\" class=\\\"main-color\\\"></ion-icon>\\n              <ion-text class=\\\"main-color\\\">&nbsp;&nbsp;&nbsp;Contraseña actual</ion-text>\\n            </ion-label>\\n            <ion-input type=\\\"password\\\" formControlName=\\\"password\\\"></ion-input>\\n          </ion-item>\\n          <!-- http error  -->\\n          <ion-label *ngIf=\\\"httpError\\\" class=\\\"errorMess\\\">\\n            <ion-icon name=\\\"alert-circle-outline\\\" class=\\\"iconFixG\\\" color=\\\"danger\\\"></ion-icon>\\n            <ion-text color=\\\"danger\\\">\\n              <small> {{ httpError }}</small>\\n            </ion-text>\\n          </ion-label>\\n        </ion-col>\\n      </ion-row>\\n\\n      <!-- Nueva contraseña -->\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          <ion-item class=\\\"ion-no-padding\\\">\\n            <ion-label position=\\\"floating\\\" class=\\\"main-color\\\">\\n              <ion-icon src=\\\"/assets/icon/ic_lock.svg\\\" slot=\\\"start\\\" class=\\\"main-color\\\"></ion-icon>\\n              <ion-text class=\\\"main-color\\\">&nbsp;&nbsp;&nbsp;Nueva contraseña</ion-text>\\n            </ion-label>\\n            <ion-input type=\\\"password\\\" formControlName=\\\"newPassword\\\"></ion-input>\\n          </ion-item>\\n          <!-- password error  -->\\n          <ion-label *ngIf=\\\"passError\\\" class=\\\"errorMess\\\">\\n            <ion-icon name=\\\"alert-circle-outline\\\" class=\\\"iconFixG\\\" color=\\\"danger\\\"></ion-icon>\\n            <ion-text color=\\\"danger\\\">\\n              <small> {{ passError }}</small>\\n            </ion-text>\\n          </ion-label>\\n        </ion-col>\\n      </ion-row>\\n\\n      <!-- Repetir nueva contraseña -->\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          <ion-item class=\\\"ion-no-padding\\\">\\n            <ion-label position=\\\"floating\\\" class=\\\"main-color\\\">\\n              <ion-icon src=\\\"/assets/icon/ic_lock.svg\\\" slot=\\\"start\\\" class=\\\"main-color\\\"></ion-icon>\\n              <ion-text class=\\\"main-color\\\">&nbsp;&nbsp;&nbsp;Repetir nueva contraseña</ion-text>\\n            </ion-label>\\n            <ion-input type=\\\"password\\\" formControlName=\\\"confirmPassword\\\"></ion-input>\\n          </ion-item>\\n          <!-- password error  -->\\n          <ion-label *ngIf=\\\"passError\\\" class=\\\"errorMess\\\">\\n            <ion-icon name=\\\"alert-circle-outline\\\" class=\\\"iconFixG\\\" color=\\\"danger\\\"></ion-icon>\\n            <ion-text color=\\\"danger\\\">\\n              <small> {{ passError }}</small>\\n            </ion-text>\\n          </ion-label>\\n        </ion-col>\\n      </ion-row>\\n\\n      <!-- BTN -->\\n      <ion-row class=\\\"ion-margin-top ion-margin-bottom ion-align-items-center\\\" style=\\\"justify-content: center\\\">\\n        <ion-col size=\\\"10\\\">\\n          <ion-button expand=\\\"block\\\" class=\\\"ion-text-uppercase\\\" type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\">\\n            GUARDAR CAMBIOS\\n          </ion-button>\\n        </ion-col>\\n      </ion-row>\\n    </form>\\n\\n\\n  </ion-grid>\\n</ion-content>\\n\";","export default \".profileImg {\\n  height: 120px;\\n  width: 120px;\\n  margin-left: auto;\\n  margin-right: auto;\\n}\\n\\n.imgCont {\\n  margin-top: 35px;\\n}\\n\\n.profileIcon {\\n  font-size: 16px;\\n  color: white;\\n  margin-left: auto;\\n  margin-right: auto;\\n}\\n\\n.rate-cont {\\n  border-radius: 50px;\\n  height: 30px;\\n  width: 30px;\\n  background-color: #53657e;\\n  display: flex;\\n  align-items: center;\\n  text-align: center;\\n  margin-left: auto;\\n  margin-right: auto;\\n  margin-top: -22px;\\n}\\n\\nform {\\n  padding: 0 20px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2ZpbGUtcGFnZS5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFBO0VBQ0EsWUFBQTtFQUNBLGlCQUFBO0VBQ0Esa0JBQUE7QUFDRjs7QUFDQTtFQUNFLGdCQUFBO0FBRUY7O0FBQUE7RUFDRSxlQUFBO0VBQ0EsWUFBQTtFQUNBLGlCQUFBO0VBQ0Esa0JBQUE7QUFHRjs7QUFEQTtFQUNFLG1CQUFBO0VBQ0EsWUFBQTtFQUNBLFdBQUE7RUFDQSx5QkFBQTtFQUNBLGFBQUE7RUFDQSxtQkFBQTtFQUNBLGtCQUFBO0VBQ0EsaUJBQUE7RUFDQSxrQkFBQTtFQUNBLGlCQUFBO0FBSUY7O0FBRkE7RUFDRSxlQUFBO0FBS0YiLCJmaWxlIjoicHJvZmlsZS1wYWdlLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5wcm9maWxlSW1nIHtcbiAgaGVpZ2h0OiAxMjBweDtcbiAgd2lkdGg6IDEyMHB4O1xuICBtYXJnaW4tbGVmdDogYXV0bztcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xufVxuLmltZ0NvbnQge1xuICBtYXJnaW4tdG9wOiAzNXB4O1xufVxuLnByb2ZpbGVJY29uIHtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBjb2xvcjogd2hpdGU7XG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICBtYXJnaW4tcmlnaHQ6IGF1dG87XG59XG4ucmF0ZS1jb250IHtcbiAgYm9yZGVyLXJhZGl1czogNTBweDtcbiAgaGVpZ2h0OiAzMHB4O1xuICB3aWR0aDogMzBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzUzNjU3ZTtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBtYXJnaW4tbGVmdDogYXV0bztcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICBtYXJnaW4tdG9wOiAtMjJweDtcbn1cbmZvcm0ge1xuICBwYWRkaW5nOiAwIDIwcHg7XG59XG4iXX0= */\";","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Component, ElementRef, EventEmitter, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { CameraResultType, CameraSource, Capacitor, Plugins } from '@capacitor/core';\nimport { LoadingController, ModalController, Platform } from '@ionic/angular';\nimport { Subscription } from 'rxjs';\n\nimport { User } from 'src/app/model/user.model';\nimport { UserService } from 'src/app/services/user.service';\nimport { API } from 'src/environments/environment';\nimport { IMAGE_URL_BLANK } from 'src/shared/constants';\nimport { SuccessModalComponent } from 'src/app/shared/success-modal/success-modal.component';\n\nfunction base64toBlob(base64Data, contentType) {\n  contentType = contentType || '';\n  const sliceSize = 1024;\n  const byteCharacters = atob(base64Data);\n  const bytesLength = byteCharacters.length;\n  const slicesCount = Math.ceil(bytesLength / sliceSize);\n  const byteArrays = new Array(slicesCount);\n\n  for (var sliceIndex = 0; sliceIndex < slicesCount; ++sliceIndex) {\n    const begin = sliceIndex * sliceSize;\n    const end = Math.min(begin + sliceSize, bytesLength);\n\n    const bytes = new Array(end - begin);\n    for (let offset = begin, i = 0; offset < end; ++i, ++offset) {\n      bytes[i] = byteCharacters[offset].charCodeAt(0);\n    }\n    byteArrays[sliceIndex] = new Uint8Array(bytes);\n  }\n  return new Blob(byteArrays, { type: contentType });\n}\n\n@Component({\n  selector: 'app-profile-page',\n  templateUrl: './profile-page.page.html',\n  styleUrls: ['./profile-page.page.scss'],\n})\nexport class ProfilePagePage implements OnInit, OnDestroy {\n  grabbedUser: User;\n  headers: HttpHeaders;\n  userSub: Subscription;\n  form: FormGroup;\n  httpError: string;\n  passError: string;\n  @Output() imgPick = new EventEmitter<string | File>();\n  selectedImage: string;\n  @ViewChild('hiddenImgInput') hiddenImgInputRef: ElementRef<HTMLInputElement>;\n  useInputPicker = false;\n\n  constructor(\n    private us: UserService,\n    private lc: LoadingController,\n    private http: HttpClient,\n    private modalController: ModalController,\n    private platform: Platform,\n  ) { }\n\n  ngOnInit() {\n    this.userSub = this.us.loggedUser.subscribe(user => {\n      this.grabbedUser = user;\n      //api headers\n      this.headers = new HttpHeaders().set('Authorization', 'Bearer ' + this.grabbedUser.access_token);\n    });\n\n    let phone1: string;\n    let phone2: string;\n    if (this.grabbedUser.phone1 === '-') {\n      phone1 = null;\n    } else {\n      phone1 = this.grabbedUser.phone1;\n    }\n    if (this.grabbedUser.phone2 === '-') {\n      phone2 = null;\n    } else {\n      phone2 = this.grabbedUser.phone2;\n    }\n    this.form = new FormGroup({\n      name: new FormControl(this.grabbedUser.name + ' ' + this.grabbedUser.last_name, {\n        updateOn: 'blur',\n        validators: [Validators.required]\n      }),\n      email: new FormControl(this.grabbedUser.email, {\n        updateOn: 'blur',\n        validators: [Validators.required, Validators.email]\n      }),\n      phone1: new FormControl(phone1, {\n        updateOn: 'blur',\n        validators: [Validators.required]\n      }),\n      phone2: new FormControl(phone2, {\n        updateOn: 'blur',\n      }),\n      password: new FormControl(null, {\n        updateOn: 'blur',\n      }),\n      newPassword: new FormControl(null, {\n        updateOn: 'blur',\n      }),\n      confirmPassword: new FormControl(null, {\n        updateOn: 'blur',\n      }),\n    });\n    // platfrom check\n    if ((this.platform.is('mobile') && !this.platform.is('hybrid')) || this.platform.is('desktop')) {\n      this.useInputPicker = true;\n    }\n  }\n\n  onUpdateUser() {\n    this.httpError = null;\n    this.passError = null;\n    let name = this.form.value.name.split(\" \");\n    let lname = name[1];\n    if (name.length > 2) {\n      lname += ' ' + name[2];\n    }\n\n    const modUser = {\n      name: name[0],\n      last_name: lname,\n      email: this.form.value.email,\n      password: this.form.value.newPassword,\n      current_password: this.form.value.password,\n      phone1: this.form.value.phone1,\n      phone2: this.form.value.phone2\n    }\n    if (this.form.value.password === null) {\n      delete modUser.password;\n      delete modUser.current_password;\n    } else {\n      if (this.form.value.newPassword !== this.form.value.confirmPassword) {\n        this.passError = 'Las contraseñas no concuerdan';\n        return;\n      }\n    }\n\n    this.lc.create({\n      message: 'Alcualizando la informacion...'\n    }).then(loadingEl => {\n      loadingEl.present();\n      let headers = new HttpHeaders().set('Authorization', 'Bearer ' + this.grabbedUser.access_token);\n      this.http.put(API + '/account', modUser, { headers: headers })\n        .subscribe(resData => {\n          loadingEl.dismiss();\n\n          if (resData['code'] === 200) {\n            //update user controler\n            this.us.setUser(new User(\n              this.grabbedUser.id,\n              resData['data'].name,\n              resData['data'].last_name,\n              resData['data'].img_profile,\n              resData['data'].email,\n              resData['data'].phone1,\n              resData['data'].phone2,\n              this.grabbedUser.role,\n              this.grabbedUser.access_token,\n            ));\n            //resets values after succefull update\n            this.form.setValue({\n              name: this.form.value.name,\n              email: this.form.value.email,\n              phone1: this.form.value.phone1,\n              phone2: this.form.value.phone2,\n              password: null,\n              newPassword: null,\n              confirmPassword: null,\n            });\n            this.modalController.create({\n              component: SuccessModalComponent,\n              componentProps: {\n                message: 'INFORMACIÓN ACTUALIZADA',\n                redirect: false,\n              },\n              cssClass: 'modalSuccess',\n            }).then(modalEl => {\n              modalEl.present();\n            });\n          }\n        }, e => {\n          loadingEl.dismiss();\n          this.httpError = e['error'].message;\n        });\n\n    });\n  }\n\n  onLoadImg() {\n    if (!Capacitor.isPluginAvailable('Camera') || this.useInputPicker) {\n      this.hiddenImgInputRef.nativeElement.click();\n      return;\n    }\n    Plugins.Camera.getPhoto({\n      quality: 100,\n      source: CameraSource.Prompt,\n      correctOrientation: true,\n      //height: 150,\n      // width: 200,\n      resultType: CameraResultType.DataUrl,\n      promptLabelPhoto: 'Fotos',\n      promptLabelPicture: 'Cámara',\n      promptLabelCancel: 'Cancelar'\n    }).then(image => {\n      this.saveImgToApi(image.dataUrl);\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  onLoadImgFromInput(e: Event) {\n    const loadedFile = (e.target as HTMLInputElement).files[0];\n    this.saveImgToApi(loadedFile);\n    //save img to api\n  }\n\n  saveImgToApi(imageData: string | File) {\n    let imgFile;\n    if (typeof imageData === 'string') {\n      try {\n        imgFile = base64toBlob(imageData.replace('data:image/jpeg;base64,', ''), 'image/jpeg');\n      } catch (e) {\n        console.log(e);\n        return;\n      }\n    } else {\n      imgFile = imageData;\n    }\n    this.form.patchValue({ image: imgFile })\n    const formData = new FormData();\n    formData.append('image', imgFile);\n    \n    this.http.post(API + '/account/image', formData, { headers: this.headers })\n      .subscribe(resData => {\n        this.us.dbUserGrab(this.grabbedUser.access_token, this.grabbedUser.role);\n        this.modalController.create({\n          component: SuccessModalComponent,\n          componentProps: {\n            message: 'INFORMACIÓN ACTUALIZADA',\n            redirect: false,\n          },\n          cssClass: 'modalSuccess',\n        }).then(modalEl => {\n          modalEl.present();\n        });\n      }, err => {\n        console.log(err);\n      });\n  }\n\n  ngOnDestroy() {\n    this.userSub.unsubscribe();\n  }\n\n  getProfilePicture() {\n    if (this.grabbedUser.img_profile && this.grabbedUser.img_profile !== IMAGE_URL_BLANK) {\n      return this.grabbedUser.img_profile;\n    }\n    return 'assets/images/avatar.png';\n  }\n\n  dbUserGrab(token: string, role: string) {\n    let headers = new HttpHeaders().set('Authorization', 'Bearer ' + token);\n    this.http.get(API + '/account/me', { headers: headers })\n      .subscribe(resData => {\n        let img: string;\n        if (resData['data'].img_profile === null) {\n          img = null;\n        } else {\n          img = resData['data'].img_profile;\n        }\n        this.grabbedUser = resData['data'];\n      });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ProfilePagePageRoutingModule } from './profile-page-routing.module';\n\nimport { ProfilePagePage } from './profile-page.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    // FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    ProfilePagePageRoutingModule\n  ],\n  declarations: [ProfilePagePage]\n})\nexport class ProfilePagePageModule {}\n"]}