{"version":3,"sources":["./src/app/login/register/register.page.html","./src/app/login/register/register.page.ts","./src/app/login/register/register.module.ts","./src/app/login/register/register.page.scss","./src/app/login/register/register-routing.module.ts"],"names":[],"mappings":"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","file":"login-register-register-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/\\\" text=\\\"\\\" icon=\\\"arrow-back\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title class=\\\"ion-text-uppercase main-color title-toolbar\\\">Registrarse</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding\\\">\\n  <div style=\\\"height: 5%\\\"></div>\\n  <ion-grid>\\n\\n    <!-- title -->\\n    <ion-row>\\n      <ion-col size=\\\"1\\\" offset=\\\"1\\\"></ion-col>\\n      <ion-col size=\\\"8\\\" class=\\\"ion-text-center\\\">\\n        <ion-text class=\\\"main-color ion-text-uppercase title\\\">INGRESA TUS DATOS PERSONALES</ion-text>\\n      </ion-col>\\n      <ion-col size=\\\"1\\\"></ion-col>\\n\\n      <ion-col size=\\\"1\\\" offset=\\\"1\\\"></ion-col>\\n      <ion-col size=\\\"8\\\" class=\\\"ion-text-center\\\">\\n        <ion-text><hr></ion-text>\\n      </ion-col>\\n      <ion-col size=\\\"1\\\"></ion-col>\\n    </ion-row>\\n\\n    <!-- Register Inputs -->\\n    <form #f=\\\"ngForm\\\" (ngSubmit)=\\\"onRegister(f)\\\">\\n      <!-- nombre -->\\n      <ion-row>\\n        <ion-col size=\\\"11\\\">\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\" class=\\\"main-color\\\">\\n              <ion-icon name=\\\"person\\\" slot=\\\"start\\\" class=\\\"main-color\\\"></ion-icon>\\n              <ion-text class=\\\"main-color\\\">&nbsp;&nbsp;&nbsp;Nombre\\n              </ion-text>\\n            </ion-label>\\n            <ion-input\\n              ngModel name=\\\"name\\\"\\n              required\\n              #nameCtrl=\\\"ngModel\\\"\\n              type=\\\"text\\\">\\n            </ion-input>\\n          </ion-item>\\n          <!-- error  -->\\n          <ion-label *ngIf=\\\"!nameCtrl.valid && nameCtrl.touched\\\" class=\\\"errorMess\\\">\\n            <ion-icon name=\\\"alert-circle-outline\\\" class=\\\"iconFixG\\\" color=\\\"danger\\\"></ion-icon>\\n            <ion-text color=\\\"danger\\\">\\n              <small> El nombre es requerido</small>\\n            </ion-text>\\n          </ion-label>\\n          <!--  httpo name error  -->\\n          <ion-label *ngIf=\\\"errors.name[0] !== undefined\\\" class=\\\"errorMess\\\">\\n            <ion-icon name=\\\"alert-circle-outline\\\" class=\\\"iconFixG\\\" color=\\\"danger\\\"></ion-icon>\\n            <ion-text color=\\\"danger\\\">\\n              <small> {{ errors.name[0] }}</small>\\n            </ion-text><br>\\n          </ion-label>\\n           <!-- http last name error  -->\\n           <ion-label *ngIf=\\\"errors.last_name[0] !== undefined\\\" class=\\\"errorMess\\\">\\n            <ion-icon name=\\\"alert-circle-outline\\\" class=\\\"iconFixG\\\" color=\\\"danger\\\"></ion-icon>\\n            <ion-text color=\\\"danger\\\">\\n              <small> {{ errors.last_name[0] }}</small>\\n            </ion-text><br>\\n          </ion-label>\\n\\n        </ion-col>\\n      </ion-row>\\n\\n      <!-- email -->\\n      <ion-row>\\n        <ion-col size=\\\"11\\\">\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\">\\n              <ion-icon name=\\\"mail\\\" slot=\\\"start\\\" class=\\\"main-color\\\"></ion-icon>\\n              <ion-text class=\\\"main-color\\\">&nbsp;&nbsp;&nbsp;Email\\n              </ion-text>\\n            </ion-label>\\n            <ion-input\\n              ngModel name=\\\"email\\\"\\n              required\\n              email\\n              #emailCtrl=\\\"ngModel\\\"\\n              type=\\\"email\\\">\\n            </ion-input>\\n          </ion-item>\\n          <!-- error  -->\\n          <ion-label *ngIf=\\\"!emailCtrl.valid && emailCtrl.touched\\\" class=\\\"errorMess\\\">\\n            <ion-icon name=\\\"alert-circle-outline\\\" class=\\\"iconFixG\\\" color=\\\"danger\\\"></ion-icon>\\n            <ion-text color=\\\"danger\\\">\\n              <small> El email es requerido</small>\\n            </ion-text>\\n          </ion-label>\\n          <!-- http email error  -->\\n          <ion-label *ngIf=\\\"errors.email[0] !== undefined\\\" class=\\\"errorMess\\\">\\n            <ion-icon name=\\\"alert-circle-outline\\\" class=\\\"iconFixG\\\" color=\\\"danger\\\"></ion-icon>\\n            <ion-text color=\\\"danger\\\">\\n              <small> {{ errors.email[0] }}</small>\\n            </ion-text><br>\\n          </ion-label>\\n         \\n\\n        </ion-col>\\n      </ion-row>\\n\\n      <!-- password -->\\n      <ion-row>\\n        <ion-col size=\\\"11\\\">\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\" class=\\\"main-color\\\">\\n              <ion-icon name=\\\"lock-closed\\\" slot=\\\"start\\\" class=\\\"main-color\\\"></ion-icon>\\n              <ion-text class=\\\"main-color\\\">&nbsp;&nbsp;&nbsp;Contrase√±a</ion-text>\\n            </ion-label>\\n            <ion-input\\n              ngModel name=\\\"password\\\"\\n              minlength=\\\"8\\\"\\n              required\\n              #passwordCtrl=\\\"ngModel\\\"\\n              type=\\\"password\\\">\\n            </ion-input>\\n          </ion-item>\\n          <!-- error  -->\\n          <ion-label *ngIf=\\\"!passwordCtrl.valid && passwordCtrl.touched\\\" class=\\\"errorMess\\\">\\n            <ion-icon name=\\\"alert-circle-outline\\\" class=\\\"iconFixG\\\" color=\\\"danger\\\"></ion-icon>\\n            <ion-text color=\\\"danger\\\">\\n              <small> El password es requerido</small>\\n            </ion-text>\\n          </ion-label>\\n          <!-- http password error  -->\\n          <ion-label *ngIf=\\\"errors.password[0] !== undefined\\\" class=\\\"errorMess\\\">\\n            <ion-icon name=\\\"alert-circle-outline\\\" class=\\\"iconFixG\\\" color=\\\"danger\\\"></ion-icon>\\n            <ion-text color=\\\"danger\\\">\\n              <small> {{ errors.password[0] }}</small>\\n            </ion-text>\\n          </ion-label>\\n\\n        </ion-col>\\n      </ion-row>\\n\\n      <!-- password confirm -->\\n      <ion-row>\\n        <ion-col size=\\\"11\\\">\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\" class=\\\"main-color\\\">\\n              <ion-icon name=\\\"lock-closed\\\" slot=\\\"start\\\" class=\\\"main-color\\\"></ion-icon>\\n              <ion-text class=\\\"main-color\\\">&nbsp;&nbsp;&nbsp;Repetir contrase√±a</ion-text>\\n            </ion-label>\\n            <ion-input\\n              ngModel name=\\\"confirm_password\\\"\\n              minlength=\\\"8\\\"\\n              required\\n              type=\\\"password\\\">\\n            </ion-input>\\n          </ion-item>\\n        </ion-col>\\n      </ion-row>\\n\\n      <!-- Registrar BTN -->\\n      <ion-row class=\\\"ion-margin-top\\\">\\n        <ion-col class=\\\"ion-margin-top\\\">\\n          <ion-button\\n            expand=\\\"block\\\"\\n            type=\\\"submit\\\"\\n            [disabled]=\\\"!f.valid\\\" \\n            class=\\\"ion-text-uppercase\\\">\\n            Registrarme\\n          </ion-button>\\n        </ion-col>\\n      </ion-row>\\n\\n    </form>\\n  </ion-grid>\\n</ion-content>\\n\";","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { LoadingController, ModalController } from '@ionic/angular';\nimport { API } from 'src/environments/environment';\nimport { SuccessModalComponent } from './success-modal/success-modal.component';\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.page.html',\n  styleUrls: ['./register.page.scss'],\n})\nexport class RegisterPage implements OnInit {\n\n  errors: any = {\n    name: [],\n    last_name: [],\n    email: [],\n    password: []\n  };\n\n  constructor(\n    private modalController: ModalController,\n    private http: HttpClient,\n    private lc: LoadingController,\n  ) { }\n\n  ngOnInit() {\n  }\n\n  onRegister(form: NgForm){\n    if (!form.valid) {\n      return;\n    }\n    let name = form.value.name;\n    let wName = name.split(\" \");\n    name = wName[0];\n    let l_name = wName[1];\n    if (wName[2] !== undefined) {\n      l_name += \" \"+ wName[2];\n    }\n    // console.log(l_name);\n    const email = form.value.email;\n    const password = form.value.password;\n    const confirm_password = form.value.confirm_password;\n    // console.log(password, confirm_password);\n    \n    if (password !== confirm_password) {\n      // console.log('wrong PW mudafucker');\n      this.errors.password = ['Las contrase√±as no coinciden'];\n      return;\n    }\n    // console.log(form);\n    this.lc.create({\n      message: 'Creando usuario...'\n    }).then(loadingEl => {\n      loadingEl.present();\n      this.http.post(API+'/auth/register', {\n        // this.http.post('http://127.0.0.1:8000/api/auth/register', {\n        name: name,\n        last_name: l_name,\n        email: email,\n        password: password,\n      }).subscribe(resData => {\n        loadingEl.dismiss();\n        if (resData['code'] === 200) {\n          this.clearErrors();\n          form.reset();\n          // modal for succes\n          this.modalController.create({\n            component: SuccessModalComponent,\n            cssClass: 'modalSuccess',\n          }).then(modalEl => {\n            modalEl.present();\n          });\n        }\n      },error => {\n        // console.log(error.error.errors.name);\n        // console.log(this.errors.name.lenght);\n        this.errors.name = [];\n        if (error.error.errors.name !== undefined) {\n          this.errors.name = error.error.errors.name; \n        }\n        this.errors.last_name = [];\n        if (error.error.errors.last_name !== undefined) {\n          this.errors.last_name = error.error.errors.last_name; \n        }\n        this.errors.email = [];\n        if (error.error.errors.email !== undefined) {\n         this.errors.email = error.error.errors.email; \n        }\n        this.errors.password = [];\n        if (error.error.errors.password !== undefined) {\n          this.errors.password = error.error.errors.password; \n        }  \n      });\n    });\n  }\n\n  clearErrors(){\n    this.errors.name = [];\n    this.errors.last_name = [];\n    this.errors.email = [];\n    this.errors.password = [];\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegisterPageRoutingModule } from './register-routing.module';\n\nimport { RegisterPage } from './register.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RegisterPageRoutingModule\n  ],\n  declarations: [RegisterPage]\n})\nexport class RegisterPageModule {}\n","export default \".title {\\n  font-size: 22px;\\n  font-weight: bold;\\n}\\n\\nhr {\\n  border-top: 1px solid #E54360;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3JlZ2lzdGVyLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGVBQUE7RUFDQSxpQkFBQTtBQUNGOztBQUNBO0VBQ0UsNkJBQUE7QUFFRiIsImZpbGUiOiJyZWdpc3Rlci5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudGl0bGV7XG4gIGZvbnQtc2l6ZTogMjJweDtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5ociB7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAjRTU0MzYwO1xufVxuIl19 */\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RegisterPage } from './register.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RegisterPageRoutingModule {}\n"],"sourceRoot":"webpack:///"}